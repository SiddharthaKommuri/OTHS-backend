# ==============================
# Server and Application Info
# ==============================
server.port=8060
spring.application.name=api-gateway

# ==============================
# Eureka Configuration
# ==============================
eureka.client.service-url.defaultZone=http://localhost:8761/eureka/
eureka.client.register-with-eureka=true
eureka.client.fetch-registry=true
eureka.instance.hostname=localhost
eureka.instance.prefer-ip-address=true

# ==============================
# Gateway Discovery Locator
# ==============================
spring.cloud.gateway.discovery.locator.enabled=true
spring.cloud.gateway.discovery.locator.lower-case-service-id=false

# ==============================
# JWT Configuration
# ==============================
jwt.secret=bm73marvCHmrs71ZskYjXa2bRNzq1LebvY8jC2ceEAk=
jwt.expiration.ms=86400000

# ==============================
# Logging
# ==============================
logging.level.org.springframework.cloud.gateway=DEBUG
logging.level.reactor.netty.http.client=DEBUG

# ==============================
# Routes Configuration
# ==============================
# 0 - Employee Service
spring.cloud.gateway.routes[0].id=employee-service
spring.cloud.gateway.routes[0].uri=lb://employee-service
spring.cloud.gateway.routes[0].predicates[0]=Path=/employee/**
spring.cloud.gateway.routes[0].filters[0]=StripPrefix=1

# 1 - Department Service
spring.cloud.gateway.routes[1].id=department-service
spring.cloud.gateway.routes[1].uri=lb://department-service
spring.cloud.gateway.routes[1].predicates[0]=Path=/department/**
spring.cloud.gateway.routes[1].filters[0]=StripPrefix=1

# 2 - Travel Package - Packages (POST, PUT) => TRAVEL_AGENT only
spring.cloud.gateway.routes[2].id=travelpackage-packages-modify
spring.cloud.gateway.routes[2].uri=lb://TRAVELPACKAGE
spring.cloud.gateway.routes[2].predicates[0]=Method=POST,PUT
spring.cloud.gateway.routes[2].predicates[1]=Path=/api/v1/packages/**
spring.cloud.gateway.routes[2].filters[0].name=AuthenticationFilter
spring.cloud.gateway.routes[2].filters[0].args.requiredRoles=TRAVEL_AGENT

# 3 - Travel Package - Packages (GET)
spring.cloud.gateway.routes[3].id=travelpackage-packages-read
spring.cloud.gateway.routes[3].uri=lb://TRAVELPACKAGE
spring.cloud.gateway.routes[3].predicates[0]=Method=GET
spring.cloud.gateway.routes[3].predicates[1]=Path=/api/v1/packages/**
spring.cloud.gateway.routes[3].filters[0].name=AuthenticationFilter
spring.cloud.gateway.routes[3].filters[0].args.requiredRoles=ADMIN,TRAVELER,TRAVEL_AGENT,HOTEL_MANAGER

# 4 - Itineraries (POST, PUT) => TRAVELER only
spring.cloud.gateway.routes[4].id=travelpackage-itineraries-modify
spring.cloud.gateway.routes[4].uri=lb://TRAVELPACKAGE
spring.cloud.gateway.routes[4].predicates[0]=Method=POST,PUT
spring.cloud.gateway.routes[4].predicates[1]=Path=/api/v1/itineraries/**
spring.cloud.gateway.routes[4].filters[0].name=AuthenticationFilter
spring.cloud.gateway.routes[4].filters[0].args.requiredRoles=TRAVELER

# 5 - Itineraries (GET)
spring.cloud.gateway.routes[5].id=travelpackage-itineraries-read
spring.cloud.gateway.routes[5].uri=lb://TRAVELPACKAGE
spring.cloud.gateway.routes[5].predicates[0]=Method=GET
spring.cloud.gateway.routes[5].predicates[1]=Path=/api/v1/itineraries/**
spring.cloud.gateway.routes[5].filters[0].name=AuthenticationFilter
spring.cloud.gateway.routes[5].filters[0].args.requiredRoles=ADMIN,TRAVELER,TRAVEL_AGENT,HOTEL_MANAGER

# 6 - Booking Service
spring.cloud.gateway.routes[6].id=booking
spring.cloud.gateway.routes[6].uri=lb://BOOKING
spring.cloud.gateway.routes[6].predicates[0]=Path=/api/v1/bookings/**

# 7 - Review GET
spring.cloud.gateway.routes[7].id=review-get
spring.cloud.gateway.routes[7].uri=lb://REVIEW1
spring.cloud.gateway.routes[7].predicates[0]=Method=GET
spring.cloud.gateway.routes[7].predicates[1]=Path=/api/reviews/**
spring.cloud.gateway.routes[7].filters[0].name=AuthenticationFilter
spring.cloud.gateway.routes[7].filters[0].args.requiredRoles=ADMIN,TRAVELER

# 8 - Review POST
spring.cloud.gateway.routes[8].id=review-post
spring.cloud.gateway.routes[8].uri=lb://REVIEW1
spring.cloud.gateway.routes[8].predicates[0]=Method=POST
spring.cloud.gateway.routes[8].predicates[1]=Path=/api/reviews
spring.cloud.gateway.routes[8].filters[0].name=AuthenticationFilter
spring.cloud.gateway.routes[8].filters[0].args.requiredRoles=TRAVELER

# 9 - Review DELETE
spring.cloud.gateway.routes[9].id=review-delete
spring.cloud.gateway.routes[9].uri=lb://REVIEW1
spring.cloud.gateway.routes[9].predicates[0]=Method=DELETE
spring.cloud.gateway.routes[9].predicates[1]=Path=/api/reviews/**
spring.cloud.gateway.routes[9].filters[0].name=AuthenticationFilter
spring.cloud.gateway.routes[9].filters[0].args.requiredRoles=TRAVELER

# 10 - Authentication Service
spring.cloud.gateway.routes[10].id=authentication
spring.cloud.gateway.routes[10].uri=lb://AUTHENTICATION
spring.cloud.gateway.routes[10].predicates[0]=Path=/api/auth/**

# 12-15 - Flight Service
# POST
spring.cloud.gateway.routes[11].id=flight-post
spring.cloud.gateway.routes[11].uri=lb://FLIGHTSERVICE
spring.cloud.gateway.routes[11].predicates[0]=Method=POST
spring.cloud.gateway.routes[11].predicates[1]=Path=/api/flights/**
spring.cloud.gateway.routes[11].filters[0].name=AuthenticationFilter
spring.cloud.gateway.routes[11].filters[0].args.requiredRoles=ADMIN

# PUT
spring.cloud.gateway.routes[12].id=flight-put
spring.cloud.gateway.routes[12].uri=lb://FLIGHTSERVICE
spring.cloud.gateway.routes[12].predicates[0]=Method=PUT
spring.cloud.gateway.routes[12].predicates[1]=Path=/api/flights/**
spring.cloud.gateway.routes[12].filters[0].name=AuthenticationFilter
spring.cloud.gateway.routes[12].filters[0].args.requiredRoles=ADMIN

# DELETE
spring.cloud.gateway.routes[13].id=flight-delete
spring.cloud.gateway.routes[13].uri=lb://FLIGHTSERVICE
spring.cloud.gateway.routes[13].predicates[0]=Method=DELETE
spring.cloud.gateway.routes[13].predicates[1]=Path=/api/flights/**
spring.cloud.gateway.routes[13].filters[0].name=AuthenticationFilter
spring.cloud.gateway.routes[13].filters[0].args.requiredRoles=ADMIN

# GET
spring.cloud.gateway.routes[14].id=flight-get
spring.cloud.gateway.routes[14].uri=lb://FLIGHTSERVICE
spring.cloud.gateway.routes[14].predicates[0]=Method=GET
spring.cloud.gateway.routes[14].predicates[1]=Path=/api/flights/**
spring.cloud.gateway.routes[14].filters[0].name=AuthenticationFilter
spring.cloud.gateway.routes[14].filters[0].args.requiredRoles=ADMIN,TRAVELER,HOTEL_MANAGER,TRAVEL_AGENT

# 15 - Admin: Get all support tickets
spring.cloud.gateway.routes[15].id=support-ticket-get-all
spring.cloud.gateway.routes[15].uri=lb://SUPPORTTICKET
spring.cloud.gateway.routes[15].predicates[0]=Method=GET
spring.cloud.gateway.routes[15].predicates[1]=Path=/api/support-tickets
spring.cloud.gateway.routes[15].filters[0].name=AuthenticationFilter
spring.cloud.gateway.routes[15].filters[0].args.requiredRoles=ADMIN

# 16 - Admin: Get ticket by ID
spring.cloud.gateway.routes[16].id=support-ticket-get-by-id
spring.cloud.gateway.routes[16].uri=lb://SUPPORTTICKET
spring.cloud.gateway.routes[16].predicates[0]=Method=GET
spring.cloud.gateway.routes[16].predicates[1]=Path=/api/support-tickets/ticket/{ticketId}
spring.cloud.gateway.routes[16].filters[0].name=AuthenticationFilter
spring.cloud.gateway.routes[16].filters[0].args.requiredRoles=ADMIN

# 17 - Admin: Get tickets by status
spring.cloud.gateway.routes[17].id=support-ticket-get-by-status
spring.cloud.gateway.routes[17].uri=lb://SUPPORTTICKET
spring.cloud.gateway.routes[17].predicates[0]=Method=GET
spring.cloud.gateway.routes[17].predicates[1]=Path=/api/support-tickets/status/{status}
spring.cloud.gateway.routes[17].filters[0].name=AuthenticationFilter
spring.cloud.gateway.routes[17].filters[0].args.requiredRoles=ADMIN

# 18 - Admin: Get total ticket count
spring.cloud.gateway.routes[18].id=support-ticket-get-count
spring.cloud.gateway.routes[18].uri=lb://SUPPORTTICKET
spring.cloud.gateway.routes[18].predicates[0]=Method=GET
spring.cloud.gateway.routes[18].predicates[1]=Path=/api/support-tickets/count
spring.cloud.gateway.routes[18].filters[0].name=AuthenticationFilter
spring.cloud.gateway.routes[18].filters[0].args.requiredRoles=ADMIN

# 19 - Admin: Update ticket status
spring.cloud.gateway.routes[19].id=support-ticket-update-status
spring.cloud.gateway.routes[19].uri=lb://SUPPORTTICKET
spring.cloud.gateway.routes[19].predicates[0]=Method=PUT
spring.cloud.gateway.routes[19].predicates[1]=Path=/api/support-tickets/{ticketId}/update
spring.cloud.gateway.routes[19].filters[0].name=AuthenticationFilter
spring.cloud.gateway.routes[19].filters[0].args.requiredRoles=ADMIN

# 20 - Traveler: Get user tickets
spring.cloud.gateway.routes[20].id=support-ticket-user-tickets
spring.cloud.gateway.routes[20].uri=lb://SUPPORTTICKET
spring.cloud.gateway.routes[20].predicates[0]=Method=GET
spring.cloud.gateway.routes[20].predicates[1]=Path=/api/support-tickets/user/{userId}
spring.cloud.gateway.routes[20].filters[0].name=AuthenticationFilter
spring.cloud.gateway.routes[20].filters[0].args.requiredRoles=TRAVELER

# 21 - Traveler: Get user tickets by status
spring.cloud.gateway.routes[21].id=support-ticket-user-tickets-status
spring.cloud.gateway.routes[21].uri=lb://SUPPORTTICKET
spring.cloud.gateway.routes[21].predicates[0]=Method=GET
spring.cloud.gateway.routes[21].predicates[1]=Path=/api/support-tickets/user/{userId}/status/{status}
spring.cloud.gateway.routes[21].filters[0].name=AuthenticationFilter
spring.cloud.gateway.routes[21].filters[0].args.requiredRoles=TRAVELER

# 22 - Traveler: Create support ticket
spring.cloud.gateway.routes[22].id=support-ticket-create
spring.cloud.gateway.routes[22].uri=lb://SUPPORTTICKET
spring.cloud.gateway.routes[22].predicates[0]=Method=POST
spring.cloud.gateway.routes[22].predicates[1]=Path=/api/support-tickets
spring.cloud.gateway.routes[22].filters[0].name=AuthenticationFilter
spring.cloud.gateway.routes[22].filters[0].args.requiredRoles=TRAVELER

# 23 - Traveler: Get user ticket count
spring.cloud.gateway.routes[23].id=support-ticket-user-ticket-count
spring.cloud.gateway.routes[23].uri=lb://SUPPORTTICKET
spring.cloud.gateway.routes[23].predicates[0]=Method=GET
spring.cloud.gateway.routes[23].predicates[1]=Path=/api/support-tickets/user/{userId}/count
spring.cloud.gateway.routes[23].filters[0].name=AuthenticationFilter
spring.cloud.gateway.routes[23].filters[0].args.requiredRoles=TRAVELER

# 24 - POST: Add new hotel (Hotel Manager only)
spring.cloud.gateway.routes[24].id=hotel-register
spring.cloud.gateway.routes[24].uri=lb://HOTELSERVICE
spring.cloud.gateway.routes[24].predicates[0]=Method=POST
spring.cloud.gateway.routes[24].predicates[1]=Path=/api/hotels
spring.cloud.gateway.routes[24].filters[0].name=AuthenticationFilter
spring.cloud.gateway.routes[24].filters[0].args.requiredRoles=HOTEL_MANAGER

# 25 - PUT: Update hotel (Hotel Manager only)
spring.cloud.gateway.routes[25].id=hotel-update
spring.cloud.gateway.routes[25].uri=lb://HOTELSERVICE
spring.cloud.gateway.routes[25].predicates[0]=Method=PUT
spring.cloud.gateway.routes[25].predicates[1]=Path=/api/hotels/{hotelId}
spring.cloud.gateway.routes[25].filters[0].name=AuthenticationFilter
spring.cloud.gateway.routes[25].filters[0].args.requiredRoles=HOTEL_MANAGER

# 26 - DELETE: Delete hotel (Hotel Manager only)
spring.cloud.gateway.routes[26].id=hotel-delete
spring.cloud.gateway.routes[26].uri=lb://HOTELSERVICE
spring.cloud.gateway.routes[26].predicates[0]=Method=DELETE
spring.cloud.gateway.routes[26].predicates[1]=Path=/api/hotels/{hotelId}
spring.cloud.gateway.routes[26].filters[0].name=AuthenticationFilter
spring.cloud.gateway.routes[26].filters[0].args.requiredRoles=HOTEL_MANAGER

# 27 - GET: All read-only hotel access (shared roles)
spring.cloud.gateway.routes[27].id=hotel-get-all
spring.cloud.gateway.routes[27].uri=lb://HOTELSERVICE
spring.cloud.gateway.routes[27].predicates[0]=Method=GET
spring.cloud.gateway.routes[27].predicates[1]=Path=/api/hotels/**
spring.cloud.gateway.routes[27].filters[0].name=AuthenticationFilter
spring.cloud.gateway.routes[27].filters[0].args.requiredRoles=HOTEL_MANAGER,ADMIN,TRAVELER,TRAVEL_AGENT

# 30 - POST: Create payment (TRAVELER, ADMIN)
spring.cloud.gateway.routes[28].id=payment-create
spring.cloud.gateway.routes[28].uri=lb://PAYMENTSERVICE
spring.cloud.gateway.routes[28].predicates[0]=Method=POST
spring.cloud.gateway.routes[28].predicates[1]=Path=/api/payments
spring.cloud.gateway.routes[28].filters[0].name=AuthenticationFilter
spring.cloud.gateway.routes[28].filters[0].args.requiredRoles=TRAVELER,ADMIN

# 31 - GET: All payments (ADMIN only)
spring.cloud.gateway.routes[29].id=payment-get-all
spring.cloud.gateway.routes[29].uri=lb://PAYMENTSERVICE
spring.cloud.gateway.routes[29].predicates[0]=Method=GET
spring.cloud.gateway.routes[29].predicates[1]=Path=/api/payments
spring.cloud.gateway.routes[29].filters[0].name=AuthenticationFilter
spring.cloud.gateway.routes[29].filters[0].args.requiredRoles=ADMIN

# 32 - GET: Payments by user ID (TRAVELER, ADMIN)
spring.cloud.gateway.routes[30].id=payment-get-by-user
spring.cloud.gateway.routes[30].uri=lb://PAYMENTSERVICE
spring.cloud.gateway.routes[30].predicates[0]=Method=GET
spring.cloud.gateway.routes[30].predicates[1]=Path=/api/payments/user/{userId}
spring.cloud.gateway.routes[30].filters[0].name=AuthenticationFilter
spring.cloud.gateway.routes[30].filters[0].args.requiredRoles=TRAVELER,ADMIN

# 33 - PUT: Cancel payment (TRAVELER, ADMIN)
spring.cloud.gateway.routes[31].id=payment-cancel
spring.cloud.gateway.routes[31].uri=lb://PAYMENTSERVICE
spring.cloud.gateway.routes[31].predicates[0]=Method=PUT
spring.cloud.gateway.routes[31].predicates[1]=Path=/api/payments/{paymentId}/cancel
spring.cloud.gateway.routes[31].filters[0].name=AuthenticationFilter
spring.cloud.gateway.routes[31].filters[0].args.requiredRoles=TRAVELER,ADMIN





# 41 - POST: Create booking (TRAVELER only)
spring.cloud.gateway.routes[32].id=booking-create
spring.cloud.gateway.routes[32].uri=lb://BOOKING
spring.cloud.gateway.routes[32].predicates[0]=Method=POST
spring.cloud.gateway.routes[32].predicates[1]=Path=/api/v1/bookings
spring.cloud.gateway.routes[32].filters[0].name=AuthenticationFilter
spring.cloud.gateway.routes[32].filters[0].args.requiredRoles=TRAVELER

# 42 - GET: All bookings (ADMIN only)
spring.cloud.gateway.routes[33].id=booking-get-all
spring.cloud.gateway.routes[33].uri=lb://BOOKING
spring.cloud.gateway.routes[33].predicates[0]=Method=GET
spring.cloud.gateway.routes[33].predicates[1]=Path=/api/v1/bookings
spring.cloud.gateway.routes[33].filters[0].name=AuthenticationFilter
spring.cloud.gateway.routes[33].filters[0].args.requiredRoles=ADMIN

# 43 - GET: Booking by ID (TRAVELER, ADMIN)
spring.cloud.gateway.routes[34].id=booking-get-by-id
spring.cloud.gateway.routes[34].uri=lb://BOOKING
spring.cloud.gateway.routes[34].predicates[0]=Method=GET
spring.cloud.gateway.routes[34].predicates[1]=Path=/api/v1/bookings/{id}
spring.cloud.gateway.routes[34].filters[0].name=AuthenticationFilter
spring.cloud.gateway.routes[34].filters[0].args.requiredRoles=TRAVELER,ADMIN

# 44 - PUT: Update booking (TRAVELER, ADMIN)
spring.cloud.gateway.routes[35].id=booking-update
spring.cloud.gateway.routes[35].uri=lb://BOOKING
spring.cloud.gateway.routes[35].predicates[0]=Method=PUT
spring.cloud.gateway.routes[35].predicates[1]=Path=/api/v1/bookings/{id}
spring.cloud.gateway.routes[35].filters[0].name=AuthenticationFilter
spring.cloud.gateway.routes[35].filters[0].args.requiredRoles=TRAVELER,ADMIN

# 45 - GET: Bookings by user ID (TRAVELER, ADMIN)
spring.cloud.gateway.routes[36].id=booking-get-by-user
spring.cloud.gateway.routes[36].uri=lb://BOOKING
spring.cloud.gateway.routes[36].predicates[0]=Method=GET
spring.cloud.gateway.routes[36].predicates[1]=Path=/api/v1/bookings/user/{userId}
spring.cloud.gateway.routes[36].filters[0].name=AuthenticationFilter
spring.cloud.gateway.routes[36].filters[0].args.requiredRoles=TRAVELER,ADMIN

# 46 - GET: Bookings by type (TRAVELER, ADMIN)
spring.cloud.gateway.routes[37].id=booking-get-by-type
spring.cloud.gateway.routes[37].uri=lb://BOOKING
spring.cloud.gateway.routes[37].predicates[0]=Method=GET
spring.cloud.gateway.routes[37].predicates[1]=Path=/api/v1/bookings/type/{type}
spring.cloud.gateway.routes[37].filters[0].name=AuthenticationFilter
spring.cloud.gateway.routes[37].filters[0].args.requiredRoles=TRAVELER,ADMIN

# 47 - GET: Bookings by status (TRAVELER, ADMIN)
spring.cloud.gateway.routes[38].id=booking-get-by-status
spring.cloud.gateway.routes[38].uri=lb://BOOKING
spring.cloud.gateway.routes[38].predicates[0]=Method=GET
spring.cloud.gateway.routes[38].predicates[1]=Path=/api/v1/bookings/status/{status}
spring.cloud.gateway.routes[38].filters[0].name=AuthenticationFilter
spring.cloud.gateway.routes[38].filters[0].args.requiredRoles=TRAVELER,ADMIN
# 48 - GET: Active bookings (TRAVELER, ADMIN)
spring.cloud.gateway.routes[39].id=booking-get-active
spring.cloud.gateway.routes[39].uri=lb://BOOKING
spring.cloud.gateway.routes[39].predicates[0]=Method=GET
spring.cloud.gateway.routes[39].predicates[1]=Path=/api/v1/bookings/active
spring.cloud.gateway.routes[39].filters[0].name=AuthenticationFilter
spring.cloud.gateway.routes[39].filters[0].args.requiredRoles=TRAVELER,ADMIN

# 49 - PUT: Cancel booking (TRAVELER, ADMIN)
spring.cloud.gateway.routes[40].id=booking-cancel
spring.cloud.gateway.routes[40].uri=lb://BOOKING
spring.cloud.gateway.routes[40].predicates[0]=Method=PUT
spring.cloud.gateway.routes[40].predicates[1]=Path=/api/v1/bookings/{bookingId}/cancel
spring.cloud.gateway.routes[40].filters[0].name=AuthenticationFilter
spring.cloud.gateway.routes[40].filters[0].args.requiredRoles=TRAVELER,ADMIN

# Travel Package - Packages (DELETE) => TRAVEL_AGENT only
spring.cloud.gateway.routes[41].id=travelpackage-packages-delete
spring.cloud.gateway.routes[41].uri=lb://TRAVELPACKAGE
spring.cloud.gateway.routes[41].predicates[0]=Method=DELETE
spring.cloud.gateway.routes[41].predicates[1]=Path=/api/v1/packages/**
spring.cloud.gateway.routes[41].filters[0].name=AuthenticationFilter
spring.cloud.gateway.routes[41].filters[0].args.requiredRoles=TRAVEL_AGENT